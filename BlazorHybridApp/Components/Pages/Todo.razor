@page "/todo"
@using BlazorHybridApp.Models
@using Microsoft.Maui.Storage
@using System.IO
@using System.Text.Json

<h3>Todo @todoItemList.Count(item => !item.IsDone) items</h3>

<button @onclick="Save">Save</button>
<button @onclick="Load">Load</button>

<ul class="list-unstyled">
	@foreach (var todo in todoItemList)
	{
		<li>
			<input type="checkbox" @bind="todo.IsDone" />
			<input @bind="todo.Title" />
		</li>
	}
</ul>

<input placeholder="Your todo note goes here" @bind="newTodo"/>
<button @onclick="AddTodo">Add item</button>

@code {
	private List<TodoItem> todoItemList = new();
	private string? newTodo;

	private void AddTodo()
	{
		if (!string.IsNullOrWhiteSpace(newTodo))
		{
			var todoItem = new TodoItem { Title = newTodo };
			todoItemList.Add(todoItem);
			newTodo = string.Empty;
		}
	}

	private async Task Save()
	{
		var contents = JsonSerializer.Serialize(todoItemList);
		var path = Path.Combine(FileSystem.AppDataDirectory, "todo.json");
		await File.WriteAllTextAsync(path, contents);
		await App.Current.MainPage.DisplayAlert("List Saved", $"List has been saved to {path}", "OK");
	}

	private async Task Load()
	{
		var path = Path.Combine(FileSystem.AppDataDirectory, "todo.json");
		if (!File.Exists(path))
			return;
		var contents = await File.ReadAllTextAsync(path);
		var savedItems = JsonSerializer.Deserialize<List<TodoItem>>(contents);
		todoItemList.Clear();
		todoItemList.AddRange(savedItems);
	}
}
